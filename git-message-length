#!/usr/bin/env bash

# git-message-length
# https://github.com/olets/git-message-length
# Copyright (Â©) 2017 Henry Bley-Vroman

declare -A __git_message_length_colors=(
  ["nc"]="\\033[0m"
  ["red"]="\\033[0;31m"
  ["yellow"]="\\033[0;33m"
  ["bg_red"]="\\033[1;30;41m"
  ["bg_yellow"]="\\033[1;30;43m"
)

__git_message_length_log() {
  'builtin' 'printf' "%s\\n" "$*"
}

__git_message_length_error() {
  'builtin' 'echo' -e "${__git_message_length_colors["red"]}$*${__git_message_length_colors["nc"]}"
}

__git_message_length_warn() {
  'builtin' 'echo' -e "${__git_message_length_colors["yellow"]}$*${__git_message_length_colors["nc"]}"
}

__git_message_length_log_highlighted_message() {
  # Characters 50-70 are highlighted in yellow, characters after 70 are highlighted in red
  'builtin' 'echo' -e "${message:0:50}${__git_message_length_colors["bg_yellow"]}${message:50:22}${__git_message_length_colors["bg_red"]}${message:72}${__git_message_length_colors["nc"]}"
}

__git_message_length_log_result() {
  if (( message_length <= 50 )); then
    __git_message_length_log "$message_length characters in commit message"
    'builtin' 'return'
  fi

  if (( message_length <= 72 )); then
    __git_message_length_warn "$message_length characters in commit message"
    'builtin' 'return'
  fi

  __git_message_length_error "$message_length characters in commit message"
}

__git_message_length_version() {
  'builtin' 'printf' "1.0.0-beta.1\\n"
}

main() {
  'builtin' 'local' -i abbrev message_length
  'builtin' 'local' message ref

  abbrev=0
  ret=0

  while (( $# )); do
    case $1 in
      --abbrev)
        abbrev=1
        'builtin' 'shift'
        ;;
      "version"|\
      "--version"|\
      "-v")
        __git_message_length_version
        return
        ;;
      *)  
        if [[ -n "$ref" ]]; then
          'builtin' 'printf' "Unsupported option \`%s\`. Only one ref can be specified\\n" "$1"
          'builtin' 'return' 2
        fi

        ref="$1"
        'builtin' 'shift'
        ;;
    esac
  done

  [[ -z "$ref" ]] && ref=HEAD

  message=$(git log --format=%B "$ref" | head -1)
  message_length=$(echo -n "$message" | wc -m)

  if (( abbrev )); then
    __git_message_length_log $message_length
    'builtin' 'return' $(( message_length > 72 ))
  fi

  __git_message_length_log_highlighted_message "$message"
  __git_message_length_log_result "$message" || 'builtin' 'return' 1
}

main "$@"